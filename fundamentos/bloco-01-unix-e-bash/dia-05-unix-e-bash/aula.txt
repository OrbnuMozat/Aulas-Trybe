Inputs & Outputs

    > - redireciona a saída padrão para um arquivo,sendo assim caso haja algum conteúdo no arquivo, ele será substituído
    >> - anexa a saída padrão a um arquivo. Sendo assim, ele adiciona o que for digitado ao final do arquivo em questão
    | - canaliza a saída do primeiro comando para a entrada do segundo, dessa forma conseguimos realizar comandos de forma sucessiva
            ➡️ grep F nomes.txt | sort
            ➡️ who | sort
        cat - pode receber valores como inputs e pode armazenar em outros arquivos.
            ctrl + d fecha edição
            ➡️ cat > nomes.txt (substitui o conteúdo pelo valor digitado)
            ➡️ cat >> nomes.txt (acrescenta os valores)
        cat - pode enviar valores de um arquivo para outro
            ➡️ cat cores.txt frutas.txt > tudo.txt (envia os dados dos dois primeiros arquivos para tudo.txt)
        sort - pode ordenar em ordem alfabética
            ➡️ sort < cores.txt ( < - output, apenas mostra pra nós mas não altera)
            ➡️ sort < cores.txt > coresOrdenadas.txt (cria um output por ordem alfabética e faz input para novo arquivo coresOrdenadas.txt)
        who - mostra quem está utilizando o sistema

Acessos a arquivos e diretórios

    ls
        -l - mostra outras informações, incluindo acessos e permissões
            ➡️ ls -l
                total 8
                -rw-rw-r-- 1 tomaz tomaz 1842 mar 24 00:14 countries.txt
                -rw-rw-r-- 1 tomaz tomaz    0 mar 24 00:20 empty.tbt
                -rw-rw-r-- 1 tomaz tomaz    0 mar 24 00:20 empty.txt
                -rw-rw-r-- 1 tomaz tomaz   52 mar 24 00:17 phrases.txt
Essas infgormações nos ajuda a ver quem pode fazer o que.
    r - leitura permitida
    w - pode escrever
    x - acessa pelo cd
    - - no começo é arquivo comum
    d - no começo é um diretório
Primeiro é o diretório, depois usuário, grupo(usuários do mesmo grupo), outros usuários

Alterar permissões
    chmod
        u - atribui apenas para usuário
        g - grupo
        o - outros usuários
        a - para todos
        
        - - retira
        + - acrescenta
        = - mantém
            ➡️ chmod u-rw phrases.txt (remove permissãoe do usuário de leitura e escrita do arquivo)
            ➡️ chmod u+rw phrases.txt (adiciona permissões de leitura e escrita)

Permissões | Links  | Proprietário | Grupo | Tamanho | Data e Hora   | Nome
  -----------|--------|--------------|-------|---------|---------------|---------
  drwxr-xr-x | 2      | root         | root  | 4096    | Out 19 09:10  | composer/

    Permissões => É possível verificar o tipo do item e nível de permissão para Leitura, Escrita e Execução de item ou diretório;
    Links => Número de ligações que o item possui, no caso do diretório, número de subdiretórios que possui;
    Proprietário => Quem é a pessoa dona, quem criou. É o diretório padrão da pessoa usuária, o home;
    Grupo => Grupo ao qual pertence o item ou diretório. Utilizado para dar permissões à outras pessoas;
    Tamanho => Em Bytes;
    Data e Hora => Momento em que foi criado ou última modificação;
    Nome => Nome do item ou diretório;

Também podem ser alterados de forma numérica:
    Leitura r - 4
    Escrita w - 2
    Execução x - 1
    
Esses valores são permissões com base em bits de ligados = 1 e desligados = 0
    rwx = 111 ( 7 | Acesso Total )
    r-- = 100 ( 4 | Somente Leitura )
    -w- = 010 ( 2 | Somente Escrita )
    --x = 001 ( 1 | Somente Execução )
    rw- = 110 ( 6 | Somente Leitura e Escrita )
    r-x = 101 ( 5 | Somente Leitura e Execução )
    -wx = 011 ( 3 | Somente Escrita e Execução )
    --- = 000 ( 0 | Todos Acessos Negados )
        ➡️ chmod 766 phrases.txt

Processos do Unix

    ps - mostra lista de processos

Exemplo de processos que podemos criar:
        ➡️ sleep 5
        ➡️ sleep 10 & (executa o processo e deixa em backgroud)
    ctrl z - coloca um processo em suspensão
    bg - coloca último processo executado em background
    jobs - mostra processos em suspensão ou background
    fg - processo suspenso volta a rodar
    ctlr c - elimina um processo
    kill - elimina um processo em backgroung podendo usar o número do PID
        -9 - força um processo que não quer encerrar

Comandos find, history e echo

Para listar todos os arquivos que terminam em .txt
        ➡️ find . -name "*.txt"

Para localizar todos os diretórios
        ➡️ find . -type d

Para localizar todos os arquivos
        ➡️ find . -type f
Localizar tanto arquivos quanto diretórios que comecem por algum trecho
        ➡️ find ./teste -name "exemplo*"
Resultado
    ./teste/exemplo.txt
    ./teste/exemplo

Localizar somente arquivos que comecem por algum trecho
        ➡️ find ./teste -type f -name "exemplo*"
Resultado
    ./teste/exemplo.txt

Localizar somente diretórios que comecem por algum trecho
        ➡️ find ./teste -type d -name "exemplo*"
Resultado
    ./teste/exemplo

Mostra o histórico de comandos
        ➡️ history
Pegar os últimos 10 comandos
        ➡️ history | tail
        ➡️ history | grep (para buscar uma palavra no histórico)
Comando history retorna resultados com um número eu pode ser usado para repetir o comando
        ➡️ history
            # resultado
            1 ls -la
            2 cmatrix
        ➡️ !2 (executa o comando cmatrix)

O `echo` é um comando utilizado em scripts ou no terminal para exibir mensagens na tela ou em um arquivo.
        ➡️ echo "Este é um teste"
    Resultado
        Este é um teste

    Pode ser usado para colocar textos dentro de arquivos.
        ➡️ echo "Este é mais um teste" > teste.txt
        ➡️ cat teste.txt
        Este é mais um teste

